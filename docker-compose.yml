version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ferrite-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Performance tuning
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ferrite-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # Ferrite Backend Service
  ferrite:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ferrite-backend
    restart: unless-stopped
    environment:
      # Database configuration (no defaults - must be provided)
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      
      # JWT Secret (MUST be set in .env file - minimum 32 characters)
      JWT_SECRET: ${JWT_SECRET}
      
      # Server configuration
      HOST: ${HOST}
      PORT: ${PORT}
      
      # Rust configuration
      RUST_LOG: ${RUST_LOG}
      RUST_BACKTRACE: ${RUST_BACKTRACE}
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ferrite-network
    healthcheck:
      test: ["CMD-SHELL", "timeout 2 bash -c '</dev/tcp/localhost/8080' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    # Read-only root filesystem for security (uncomment if app supports it)
    # read_only: true
    # tmpfs:
    #   - /tmp

  # Optional: Database Administration Tool (PgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ferrite-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - ferrite-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - tools  # Only start when explicitly requested: docker-compose --profile tools up

networks:
  ferrite-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
